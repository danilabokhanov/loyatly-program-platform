version: '3.8'

services:
  auth-service:
    build: ./auth_service
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
  api-gateway:
    build: ./api_gateway
    ports:
      - "8082:8082"
    networks:
      - app-network
    depends_on:
      - auth-service
      - loyalty-service
      - stats-service
      - kafka
  nginx:
    image: nginx:1.25.3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8081:8081"
    depends_on:
      - api-gateway
    networks:
      - app-network
  postgres:
    image: postgres:16.0
    restart: always
    env_file:
      - ./auth_service/credentials/.env
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql_storage:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d auth" ]
      interval: 10s
      retries: 3
      start_period: 5s
      timeout: 5s
  cassandra:
    image: cassandra:4.0
    restart: always
    container_name: cassandra
    ports:
      - "9042:9042"
    networks:
      - app-network
    environment:
      - CASSANDRA_CLUSTER_NAME=promo-cluster
      - CASSANDRA_NUM_TOKENS=256
    volumes:
      - ./cassandra_data:/var/lib/cassandra
  loyalty-service:
    build: ./loyalty_service
    ports:
      - "8083:8083"
    depends_on:
      - cassandra
    networks:
      - app-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9153:9153
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - app-network
  stats-service:
    build: ./stats_service
    ports:
      - "8085:8085"
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
